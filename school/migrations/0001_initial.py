# Generated by Django 4.2 on 2023-04-25 14:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Class",
            fields=[
                (
                    "title",
                    models.CharField(
                        choices=[
                            ("6", "Six"),
                            ("7", "Seven"),
                            ("8", "Eight"),
                            ("9", "Nine"),
                            ("10", "Ten"),
                        ],
                        max_length=2,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="eg: 'Class 6, total 120 students, 4 sections, 30 students in each section'"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Classes",
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("A", "Section A"),
                            ("B", "Section B"),
                            ("C", "Section C"),
                            ("Sc", "Science"),
                            ("Co", "Commerce"),
                            ("Ar", "Arts"),
                        ],
                        max_length=2,
                        verbose_name="Section",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Section Description, e.g. 'Section A of Class 6, total 30 students'"
                    ),
                ),
                ("total_students", models.PositiveIntegerField(default=0)),
                (
                    "class_name",
                    models.ForeignKey(
                        help_text="Class",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="school.class",
                        verbose_name="Class",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Sections",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name_en",
                    models.CharField(
                        help_text="Student's full name in English",
                        max_length=255,
                        verbose_name="Name (EN)",
                    ),
                ),
                (
                    "name_bn",
                    models.CharField(
                        blank=True,
                        help_text="Student's name in Bangla",
                        max_length=255,
                        null=True,
                        verbose_name="Name (BN)",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date of Birth"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "religion",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Muslim"),
                            ("H", "Hindu"),
                            ("C", "Christian"),
                            ("B", "Buddhist"),
                            ("O", "Others"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                        ],
                        max_length=3,
                        null=True,
                        verbose_name="Blood Group",
                    ),
                ),
                (
                    "student_id",
                    models.CharField(
                        blank=True, max_length=7, unique=True, verbose_name="Student ID"
                    ),
                ),
                (
                    "birth_certificate_no",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        unique=True,
                        verbose_name="Birth Certificate Number",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=11,
                        null=True,
                        verbose_name="Phone Number",
                    ),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "fathers_name_en",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Father's Name (EN)",
                    ),
                ),
                (
                    "fathers_name_bn",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Father's Name (EN)",
                    ),
                ),
                (
                    "fathers_nid",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        unique=True,
                        verbose_name="Father's NID",
                    ),
                ),
                (
                    "fathers_occupation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "fathers_phone",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                (
                    "mothers_name_en",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Mother's Name (EN)",
                    ),
                ),
                (
                    "mothers_name_bn",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Mother's Name (BN)",
                    ),
                ),
                (
                    "mothers_nid",
                    models.CharField(
                        blank=True,
                        max_length=17,
                        null=True,
                        unique=True,
                        verbose_name="Mother's NID",
                    ),
                ),
                (
                    "mothers_occupation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mothers_phone",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("present_address", models.TextField(blank=True, null=True)),
                ("permanent_address", models.TextField(blank=True, null=True)),
                (
                    "nationality",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("admission_date", models.DateField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="student_photo"),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="eg: any record about that student",
                        null=True,
                    ),
                ),
                ("status", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "admission_class",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="school.class",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Students",
                "unique_together": {("student_id", "birth_certificate_no")},
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Subjects",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_en", models.CharField(max_length=255)),
                ("name_bn", models.CharField(blank=True, max_length=255, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "religion",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Muslim"),
                            ("H", "Hindu"),
                            ("C", "Christian"),
                            ("B", "Buddhist"),
                            ("O", "Others"),
                        ],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "blood_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A+", "A+"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B-", "B-"),
                            ("O+", "O+"),
                            ("O-", "O-"),
                            ("AB+", "AB+"),
                            ("AB-", "AB-"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("teacher_id", models.CharField(blank=True, max_length=7)),
                ("nid", models.CharField(blank=True, max_length=17)),
                ("phone", models.CharField(blank=True, max_length=11, null=True)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("present_address", models.TextField(blank=True, null=True)),
                ("permanent_address", models.TextField(blank=True, null=True)),
                ("joining_date", models.DateField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(blank=True, null=True, upload_to="teacher_photo"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Teachers",
                "unique_together": {("teacher_id", "nid")},
            },
        ),
        migrations.CreateModel(
            name="SectionSubject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="school.section"
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="school.subject"
                    ),
                ),
                (
                    "teachers",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="school.teacher"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="section",
            name="class_teacher",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="school.teacher",
            ),
        ),
        migrations.AddField(
            model_name="section",
            name="subjects",
            field=models.ManyToManyField(
                through="school.SectionSubject", to="school.subject"
            ),
        ),
        migrations.AddField(
            model_name="class",
            name="class_teacher",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="school.teacher",
            ),
        ),
        migrations.CreateModel(
            name="Attendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("status", models.BooleanField(default=False)),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="school.student"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Attendances",
            },
        ),
        migrations.CreateModel(
            name="StudentAssign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("class_roll", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="section",
                        to="school.section",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="student",
                        to="school.student",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Student Assign",
                "unique_together": {("student", "section", "class_roll")},
            },
        ),
        migrations.AlterUniqueTogether(
            name="section",
            unique_together={("name", "class_name")},
        ),
    ]
