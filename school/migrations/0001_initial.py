# Generated by Django 4.2.4 on 2023-10-19 19:53

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('title', models.CharField(choices=[('Six', 'Six'), ('Seven', 'Seven'), ('Eignt', 'Eight'), ('Nine', 'Nine'), ('Ten', 'Ten')], max_length=8, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, default='', help_text="eg: 'Class 6, total 120 students, 4 sections, 30 students in each section'", null=True)),
            ],
            options={
                'verbose_name_plural': 'Classes',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(choices=[('Half Yearly', 'Half Yearly'), ('Year Final', 'Year Final'), ('Pretest', 'Pretest'), ('Test', 'Test')], max_length=20)),
                ('year', models.CharField(max_length=4)),
                ('date', models.DateField(default=datetime.date.today)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('A', 'Section A'), ('B', 'Section B'), ('C', 'Section C'), ('Sc', 'Science'), ('Co', 'Commerce'), ('Ar', 'Arts')], max_length=2, verbose_name='Section')),
                ('description', models.TextField(blank=True, help_text="Section Description, e.g. 'Section A of Class 6, total 30 students'", null=True)),
                ('seat', models.PositiveIntegerField(default=0)),
                ('class_name', models.ForeignKey(help_text='Class', on_delete=django.db.models.deletion.CASCADE, to='school.class', verbose_name='Class')),
            ],
            options={
                'verbose_name_plural': 'Sections',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.CharField(help_text='Student ID, e.g. 20190001', max_length=9, primary_key=True, serialize=False, unique=True, verbose_name='Student ID')),
                ('name_en', models.CharField(help_text="Student's full name in English", max_length=255, verbose_name='Name (EN)')),
                ('name_bn', models.CharField(blank=True, help_text="Student's name in Bangla", max_length=255, null=True, verbose_name='Name (BN)')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('religion', models.CharField(blank=True, choices=[('M', 'Muslim'), ('H', 'Hindu'), ('C', 'Christian'), ('B', 'Buddhist'), ('O', 'Others')], max_length=1, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True, verbose_name='Blood Group')),
                ('birth_certificate_no', models.CharField(blank=True, max_length=17, unique=True, verbose_name='Birth Certificate Number')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fathers_name_en', models.CharField(blank=True, max_length=255, null=True, verbose_name="Father's Name (EN)")),
                ('fathers_name_bn', models.CharField(blank=True, max_length=255, null=True, verbose_name="Father's Name (EN)")),
                ('fathers_nid', models.CharField(blank=True, max_length=17, null=True, unique=True, verbose_name="Father's NID")),
                ('fathers_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('fathers_phone', models.CharField(blank=True, max_length=11, null=True)),
                ('mothers_name_en', models.CharField(blank=True, max_length=255, null=True, verbose_name="Mother's Name (EN)")),
                ('mothers_name_bn', models.CharField(blank=True, max_length=255, null=True, verbose_name="Mother's Name (BN)")),
                ('mothers_nid', models.CharField(blank=True, max_length=17, null=True, unique=True, verbose_name="Mother's NID")),
                ('mothers_occupation', models.CharField(blank=True, max_length=255, null=True)),
                ('mothers_phone', models.CharField(blank=True, max_length=11, null=True)),
                ('present_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=255, null=True)),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='student_photo')),
                ('comment', models.TextField(blank=True, help_text='eg: any record about that student', null=True)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admission_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.class')),
            ],
            options={
                'verbose_name_plural': 'Students',
                'unique_together': {('student_id', 'birth_certificate_no')},
            },
        ),
        migrations.CreateModel(
            name='StudentAssign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_roll', models.CharField(blank=True, max_length=3, null=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section', to='school.section')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_assign', to='school.student')),
            ],
            options={
                'unique_together': {('section', 'class_roll')},
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Subject Name', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, default='', help_text='Subject Description', null=True)),
            ],
            options={
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacher_id', models.CharField(help_text='Teacher ID, e.g. 20190001', max_length=9, primary_key=True, serialize=False, unique=True, verbose_name='Teacher ID')),
                ('name_en', models.CharField(max_length=255)),
                ('name_bn', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('religion', models.CharField(blank=True, choices=[('M', 'Muslim'), ('H', 'Hindu'), ('C', 'Christian'), ('B', 'Buddhist'), ('O', 'Others')], max_length=1, null=True)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('O+', 'O+'), ('O-', 'O-'), ('AB+', 'AB+'), ('AB-', 'AB-')], max_length=3, null=True)),
                ('nid', models.CharField(blank=True, max_length=17)),
                ('phone', models.CharField(blank=True, max_length=11, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('present_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='teacher_photo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Teachers',
                'unique_together': {('teacher_id', 'nid')},
            },
        ),
        migrations.CreateModel(
            name='SectionSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('time', models.TimeField(blank=True, null=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.section')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.subject')),
                ('teachers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.teacher')),
            ],
            options={
                'ordering': ['period'],
                'unique_together': {('teachers', 'section', 'period')},
            },
        ),
        migrations.AddField(
            model_name='section',
            name='section_teacher',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.teacher', verbose_name='Section Teacher'),
        ),
        migrations.AddField(
            model_name='section',
            name='subjects',
            field=models.ManyToManyField(through='school.SectionSubject', to='school.subject'),
        ),
        migrations.CreateModel(
            name='ExamSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.subject')),
            ],
        ),
        migrations.CreateModel(
            name='ExamAssign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_paper', models.FileField(blank=True, null=True, upload_to='question_paper')),
                ('full_mark', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('pass_mark', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('exam_time', models.TimeField(blank=True, help_text='Exam Time', null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.exam')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.examsubject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='school.teacher')),
            ],
            options={
                'ordering': ['exam', 'subject'],
                'unique_together': {('exam', 'subject')},
            },
        ),
        migrations.AddField(
            model_name='class',
            name='class_teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school.teacher'),
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mcq_mark', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('written_mark', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('practical_mark', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('exam_assign', models.ForeignKey(help_text='Exam Assign', on_delete=django.db.models.deletion.CASCADE, to='school.examassign')),
                ('student_assign', models.ForeignKey(help_text='Student Assign', on_delete=django.db.models.deletion.CASCADE, to='school.studentassign')),
            ],
            options={
                'unique_together': {('exam_assign', 'student_assign')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('name', 'class_name')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('status', models.BooleanField(default=False)),
                ('student_assign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_attendance', to='school.studentassign')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student_assign', 'date')},
            },
        ),
    ]
